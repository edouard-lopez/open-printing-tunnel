#!/usr/bin/env bash
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# DO NOT EDIT THIS FILE without thorough understanding of the mechanism at
# work behind the scene!
# For information, please read the README.md file
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# This value will be automatically replaced if you use 'make add-host'
declare -- RemoteHost="{{HOST}}"
# This should not be changed without confirmation from upper authority
declare -- RemoteUser="coaxis"
declare -i RemotePort=22

# compression level isn't available in SSH2 (cf. http://serverfault.com/q/388658)
Compression="yes"

# Check connection every 10 seconds, and after 3 tries (30 seconds), drop and
# let autossh re-connect.
declare -i ServerAliveInterval=3
declare -i ServerAliveCountMax=2
declare -- StrictHostKeyChecking="no"

declare -- LocalUser="mast"
# @see SSH_KEYFILE in 'makefile'
declare -- IdentityFile="/home/$LocalUser/.ssh/id_rsa.mast.coaxis"


# Array of ports to be forwarded. Example:
# 	Forward port 3307, listening on 127.0.0.1 on the remote side, to
# 	127.0.0.1 port 3306 on the local side. Forward port 8081, listening on
# 	127.0.0.1 on the local side, to 10.100.1.60 port 80 on the remote side.
#	Forwarding:
#		"L *:9100:imp1:9100 # comment about printer1"
#		"L *:9101:imp2:9100 # comment: ()[]'' about printer#1"
declare -a ForwardPort=()
# Bandwidth limitation flag (using trickle)
declare -- BandwidthLimitation=true
# Limit is expressed as kilobytes
UploadLimit=100
declare -i DownloadLimit=10000